/*
Navicat MySQL Data Transfer

Source Server         : localhost
Source Server Version : 50713
Source Host           : localhost:3306
Source Database       : world

Target Server Type    : MYSQL
Target Server Version : 50713
File Encoding         : 65001

Date: 2017-02-07 14:35:55
*/

SET FOREIGN_KEY_CHECKS=0;

-- ----------------------------
-- Table structure for article
-- ----------------------------
DROP TABLE IF EXISTS `article`;
CREATE TABLE `article` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `uid` int(5) unsigned NOT NULL,
  `title` varchar(50) NOT NULL,
  `introduce` varchar(255) DEFAULT NULL,
  `content` text NOT NULL,
  `gid` int(1) unsigned NOT NULL,
  `cid` int(1) unsigned DEFAULT NULL,
  `add_time` int(11) unsigned NOT NULL,
  `save_time` int(11) unsigned DEFAULT NULL,
  `is_show` int(1) NOT NULL DEFAULT '1',
  `path` varchar(100) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `title` (`title`) USING BTREE,
  KEY `gid` (`gid`) USING BTREE,
  KEY `cid` (`cid`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=23 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of article
-- ----------------------------
INSERT INTO `article` VALUES ('18', '10', '修改my.cnf配置不生效', '修改了 my.cnf 配置文件后，却不生效，这是怎么回事？', '<section>&nbsp;&nbsp;我们注意到，这里只说了修改 my.cnf，并没有说清楚其绝对路径是哪个文件。也就是说，有可能修改的不是正确路径下的my.cnf文件。</section><p style=\"margin-top: 0px; margin-bottom: 1.71429rem; padding: 0px; border: 0px; font-size: 14px; vertical-align: baseline; line-height: 24px; color: rgb(68, 68, 68); font-family: Helvetica, Arial, sans-serif; white-space: normal; text-align: left; background-color: rgb(255, 255, 255);\">&nbsp;</p><p style=\"margin-top: 0px; margin-bottom: 1.71429rem; padding: 0px; border: 0px; font-size: 14px; vertical-align: baseline; line-height: 24px; color: rgb(68, 68, 68); font-family: Helvetica, Arial, sans-serif; white-space: normal; text-align: left; background-color: rgb(255, 255, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在MySQL中，是允许存在多个 my.cnf 配置文件的，有的能对整个系统环境产生影响，例如：/etc/my.cnf。有的则只能影响个别用户，例如：~/.my.cnf。<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MySQL读取各个my.cnf配置文件的先后顺序是：</p><ul style=\"margin-bottom: 1.71429rem; padding: 0px; border: 0px; font-size: 14px; vertical-align: baseline; list-style-position: outside; line-height: 24px; color: rgb(68, 68, 68); font-family: Helvetica, Arial, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\" class=\" list-paddingleft-2\"><ul class=\" list-paddingleft-2\" style=\"list-style-type: square;\"><ul class=\"custom_dash list-paddingleft-1\"><ul class=\"custom_dot list-paddingleft-2\"><li class=\"list-dot list-dot-paddingleft\"><p style=\"text-align: left;\"><span style=\"margin: 0px; padding: 0px; border: 0px; vertical-align: baseline; color: rgb(51, 102, 255);\">/etc/my.cnf</span></p></li><li class=\"list-dot list-dot-paddingleft\"><p style=\"text-align: left;\"><span style=\"margin: 0px; padding: 0px; border: 0px; vertical-align: baseline; color: rgb(51, 102, 255);\">/etc/mysql/my.cnf</span></p></li><li class=\"list-dot list-dot-paddingleft\"><p style=\"text-align: left;\"><span style=\"margin: 0px; padding: 0px; border: 0px; vertical-align: baseline; color: rgb(51, 102, 255);\">/usr/local/mysql/etc/my.cnf</span></p></li><li class=\"list-dot list-dot-paddingleft\"><p style=\"text-align: left;\"><span style=\"margin: 0px; padding: 0px; border: 0px; vertical-align: baseline; color: rgb(51, 102, 255);\">~/.my.cnf</span></p></li><li class=\"list-dot list-dot-paddingleft\"><p style=\"text-align: left;\"><span style=\"margin: 0px; padding: 0px; border: 0px; vertical-align: baseline; color: rgb(51, 102, 255);\">其他自定义路径下的my.cnf，例如：/data/mysql/yejr_3306/my.cnf</span></p></li></ul></ul></ul></ul><p style=\"margin-top: 0px; margin-bottom: 1.71429rem; padding: 0px; border: 0px; font-size: 14px; vertical-align: baseline; line-height: 24px; color: rgb(68, 68, 68); font-family: Helvetica, Arial, sans-serif; white-space: normal; text-align: left; background-color: rgb(255, 255, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;不管是mysqld服务器端程序，还是mysql客户端程序，都可以采用下面两个参数来自行指定要读取的配置文件路径：</p><ul style=\"margin-bottom: 1.71429rem; padding: 0px; border: 0px; font-size: 14px; vertical-align: baseline; list-style-position: outside; line-height: 24px; color: rgb(68, 68, 68); font-family: Helvetica, Arial, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\" class=\" list-paddingleft-2\"><ul class=\" list-paddingleft-2\" style=\"list-style-type: square;\"><ul class=\"custom_dash list-paddingleft-1\"><ul class=\"custom_dot list-paddingleft-2\"><li class=\"list-dot list-dot-paddingleft\"><p style=\"text-align: left;\"><span style=\"margin: 0px; padding: 0px; border: 0px; vertical-align: baseline; color: rgb(51, 102, 255);\">–defaults-file=#， 只读取指定的文件（不再读取其他配置文件）</span></p></li><li class=\"list-dot list-dot-paddingleft\"><p style=\"text-align: left;\"><span style=\"margin: 0px; padding: 0px; border: 0px; vertical-align: baseline; color: rgb(51, 102, 255);\">–defaults-extra-file=#， 从其他优先级更高的配置文件中读取全局配置后，再读取指定的配置文件（有些选项可以覆盖掉全局配置从的设定值）</span></p></li></ul></ul></ul></ul><p style=\"margin-top: 0px; margin-bottom: 1.71429rem; padding: 0px; border: 0px; font-size: 14px; vertical-align: baseline; line-height: 24px; color: rgb(68, 68, 68); font-family: Helvetica, Arial, sans-serif; white-space: normal; text-align: left; background-color: rgb(255, 255, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;因此，可以看到，如果你修改的是非“著名”目录下的 my.cnf，有可能看起来是不生效的，需要自行指定，或者统一放在 /etc/my.cnf 下，采用多实例的方式来管理即可。</p><p><br/></p>', '1', '19', '1470300007', '1470389462', '1', 'html/20160804/20160804164007.html');
INSERT INTO `article` VALUES ('19', '10', '微信公众号[一]', '公众号配置', '<h2 style=\"margin: 0px; color: rgb(34, 34, 34); font-family: &quot;Helvetica Neue&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, 黑体, Arial, sans-serif; white-space: normal;\">第一步：填写服务器配置<br/></h2><p style=\"margin-top: 0px; margin-bottom: 0px; padding-bottom: 14px; font-size: 14px; color: rgb(34, 34, 34); font-family: &quot;Helvetica Neue&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, 黑体, Arial, sans-serif; line-height: 22.4px; white-space: normal;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;登录微信公众平台官网后，在公众平台官网的开发-基本设置页面，勾选协议成为开发者，点击“修改配置”按钮，填写服务器地址（URL）、Token和EncodingAESKey，其中URL是开发者用来接收微信消息和事件的接口URL。Token可由开发者可以任意填写，用作生成签名（该Token会和接口URL中包含的Token进行比对，从而验证安全性）。EncodingAESKey由开发者手动填写或随机生成，将用作消息体加解密密钥。</p><p style=\"margin-top: 0px; margin-bottom: 0px; padding-bottom: 14px; font-size: 14px; color: rgb(34, 34, 34); font-family: &quot;Helvetica Neue&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, 黑体, Arial, sans-serif; line-height: 22.4px; white-space: normal;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;一、服务器URL</p><p style=\"margin-top: 0px; margin-bottom: 0px; padding-bottom: 14px; font-size: 14px; color: rgb(34, 34, 34); font-family: &quot;Helvetica Neue&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, 黑体, Arial, sans-serif; line-height: 22.4px; white-space: normal;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;设置提交以后微信服务器GET访问的URL<br/></p><p style=\"margin-top: 0px; margin-bottom: 0px; padding-bottom: 14px; font-size: 14px; color: rgb(34, 34, 34); font-family: &quot;Helvetica Neue&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, 黑体, Arial, sans-serif; line-height: 22.4px; white-space: normal;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;二、Token<br/></p><p style=\"margin-top: 0px; margin-bottom: 0px; padding-bottom: 14px; font-size: 14px; color: rgb(34, 34, 34); font-family: &quot;Helvetica Neue&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, 黑体, Arial, sans-serif; line-height: 22.4px; white-space: normal;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;为服务器生成的令牌<br/></p><p style=\"margin-top: 0px; margin-bottom: 0px; padding-bottom: 14px; font-size: 14px; color: rgb(34, 34, 34); font-family: &quot;Helvetica Neue&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, 黑体, Arial, sans-serif; line-height: 22.4px; white-space: normal;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;三、EndcodingAESKey（消息加密密钥）<br/></p><p style=\"margin-top: 0px; margin-bottom: 0px; padding-bottom: 14px; font-size: 14px; color: rgb(34, 34, 34); font-family: &quot;Helvetica Neue&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, 黑体, Arial, sans-serif; line-height: 22.4px; white-space: normal;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;可以有服务器自动生成，或者自己填写</p><h2 style=\"margin: 0px; color: rgb(34, 34, 34); font-family: &quot;Helvetica Neue&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, 黑体, Arial, sans-serif; white-space: normal;\">第二步：验证消息的确来自微信服务器<br/></h2><p style=\"margin-top: 0px; margin-bottom: 0px; padding-bottom: 14px; font-size: 14px; color: rgb(34, 34, 34); font-family: &quot;Helvetica Neue&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, 黑体, Arial, sans-serif; line-height: 22.4px; white-space: normal;\">开发者提交信息后，微信服务器将发送GET请求到填写的服务器地址URL上，GET请求携带参数如下表所示：</p><table class=\"table\" width=\"889\" style=\"width: 716px;\"><tbody class=\"tbody\"><tr class=\"firstRow thead\" style=\"background-color: rgb(244, 245, 249);\"><td class=\"table_cell\" width=\"325\" valign=\"top\" style=\"padding: 12px 32px; line-height: 20px; border-left-width: 0px; border-left-color: rgb(231, 231, 235); border-bottom-color: rgb(231, 231, 235); border-top-width: 0px; border-top-color: rgb(231, 231, 235); text-align: left; min-width: 80px; word-break: break-all;\"><span style=\"font-weight: 700;\">参数<br/></span></td><td class=\"table_cell\" width=\"325\" valign=\"top\" style=\"padding: 12px 32px; line-height: 20px; border-left-color: rgb(231, 231, 235); border-bottom-color: rgb(231, 231, 235); border-top-width: 0px; border-top-color: rgb(231, 231, 235); text-align: left; min-width: 80px; word-break: break-all;\"><span style=\"font-weight: 700;\">描述</span></td></tr><tr><td class=\"table_cell\" width=\"325\" valign=\"top\" style=\"padding: 12px 32px; border-top-color: rgb(231, 231, 235); text-align: left; min-width: 80px; word-break: break-all;\">signature</td><td class=\"table_cell\" width=\"325\" valign=\"top\" style=\"padding: 12px 32px; border-top-color: rgb(231, 231, 235); text-align: left; min-width: 80px; word-break: break-all;\">微信加密签名，signature结合了开发者填写的token参数和请求中的timestamp参数、nonce参数。</td></tr><tr><td class=\"table_cell\" width=\"325\" valign=\"top\" style=\"padding: 12px 32px; border-top-color: rgb(231, 231, 235); text-align: left; min-width: 80px; word-break: break-all;\">timestamp</td><td class=\"table_cell\" width=\"325\" valign=\"top\" style=\"padding: 12px 32px; border-top-color: rgb(231, 231, 235); text-align: left; min-width: 80px; word-break: break-all;\">时间戳</td></tr><tr><td class=\"table_cell\" width=\"325\" valign=\"top\" style=\"padding: 12px 32px; border-top-color: rgb(231, 231, 235); text-align: left; min-width: 80px; word-break: break-all;\">nonce</td><td class=\"table_cell\" width=\"325\" valign=\"top\" style=\"padding: 12px 32px; border-top-color: rgb(231, 231, 235); text-align: left; min-width: 80px; word-break: break-all;\">随机数</td></tr><tr><td class=\"table_cell\" width=\"325\" valign=\"top\" style=\"padding: 12px 32px; border-top-color: rgb(231, 231, 235); text-align: left; min-width: 80px; word-break: break-all;\">echostr</td><td class=\"table_cell\" width=\"325\" valign=\"top\" style=\"padding: 12px 32px; border-top-color: rgb(231, 231, 235); text-align: left; min-width: 80px; word-break: break-all;\">随机字符串</td></tr></tbody></table><p style=\"margin-top: 0px; margin-bottom: 0px; padding-bottom: 14px; font-size: 14px; color: rgb(34, 34, 34); font-family: &quot;Helvetica Neue&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, 黑体, Arial, sans-serif; line-height: 22.4px; white-space: normal;\"><br/></p><p style=\"margin-top: 0px; margin-bottom: 0px; padding-bottom: 14px; font-size: 14px; color: rgb(34, 34, 34); font-family: &quot;Helvetica Neue&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, 黑体, Arial, sans-serif; line-height: 22.4px; white-space: normal;\">开发者通过检验signature对请求进行校验（下面有校验方式）。若确认此次GET请求来自微信服务器，请原样返回echostr参数内容，则接入生效，成为开发者成功，否则接入失败。加密/校验流程如下：</p><p><br/></p><table class=\"table\" width=\"889\" style=\"width: 716px;\"><tbody class=\"tbody\"><tr class=\"firstRow thead\" style=\"background-color: rgb(244, 245, 249);\"><td class=\"table_cell\" width=\"946\" valign=\"top\" style=\"padding: 12px 32px; line-height: 20px; border-left-width: 0px; border-left-color: rgb(231, 231, 235); border-bottom-color: rgb(231, 231, 235); border-top-width: 0px; border-top-color: rgb(231, 231, 235); text-align: left; min-width: 80px; word-break: break-all;\"><p style=\"padding-bottom: 14px;\">1）将token、timestamp、nonce三个参数进行字典序排序</p><p style=\"padding-bottom: 14px;\">2）将三个参数字符串拼接成一个字符串进行sha1加密</p><p style=\"padding-bottom: 14px;\">3）开发者获得加密后的字符串可与signature对比，标识该请求来源于微信</p></td></tr></tbody></table><p><br/></p><p><br/></p><p>PHP代码示例：</p><pre style=\"background-color:#2b2b2b;color:#a9b7c6;font-family:&#39;Source Code Pro&#39;;font-size:11.3pt;\">public&nbsp;function&nbsp;chechWeiXinAction(){&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//微信加密签名&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$signature&nbsp;=&nbsp;$_GET[&quot;signature&quot;];&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//时间戳&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$timestamp&nbsp;=&nbsp;$_GET[&quot;timestamp&quot;];&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//随机数&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$nonce&nbsp;=&nbsp;$_GET[&quot;nonce&quot;];&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$token&nbsp;=&nbsp;WEB_KEY;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$tmpArr&nbsp;=&nbsp;array($token,$timestamp,$nonce);&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sort($tmpArr,SORT_STRING);&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$tmpStr&nbsp;=&nbsp;implode($tmpArr);&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$tmpStr&nbsp;=&nbsp;sha1($tmpStr);&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if($tmpStr&nbsp;==&nbsp;$signature){&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;true;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}else{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</pre><p><br/></p><h2 style=\"margin: 0px; color: rgb(34, 34, 34); font-family: &quot;Helvetica Neue&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, 黑体, Arial, sans-serif; white-space: normal;\">三步：依据接口文档实现业务逻辑<br/></h2><p style=\"margin-top: 0px; margin-bottom: 0px; padding-bottom: 14px; font-size: 14px; color: rgb(34, 34, 34); font-family: &quot;Helvetica Neue&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, 黑体, Arial, sans-serif; line-height: 22.4px; white-space: normal;\">验证URL有效性成功后即接入生效，成为开发者。你可以在公众平台网站中申请微信认证，认证成功后，将获得更多接口权限，满足更多业务需求。</p><p style=\"margin-top: 0px; margin-bottom: 0px; padding-bottom: 14px; font-size: 14px; color: rgb(34, 34, 34); font-family: &quot;Helvetica Neue&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, 黑体, Arial, sans-serif; line-height: 22.4px; white-space: normal;\">成为开发者后，用户每次向公众号发送消息、或者产生自定义菜单、或产生微信支付订单等情况时，开发者填写的服务器配置URL将得到微信服务器推送过来的消息和事件，开发者可以依据自身业务逻辑进行响应，如回复消息。</p><p style=\"margin-top: 0px; margin-bottom: 0px; padding-bottom: 14px; font-size: 14px; color: rgb(34, 34, 34); font-family: &quot;Helvetica Neue&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, 黑体, Arial, sans-serif; line-height: 22.4px; white-space: normal;\">公众号调用各接口时，一般会获得正确的结果，具体结果可见对应接口的说明。返回错误时，可根据返回码来查询错误原因。<a href=\"https://mp.weixin.qq.com/wiki?t=resource/res_main&id=mp1433747234\" target=\"_parent\" style=\"outline: 0px; color: rgb(69, 154, 233); text-decoration: none;\">全局返回码说明</a></p><p style=\"margin-top: 0px; margin-bottom: 0px; padding-bottom: 14px; font-size: 14px; color: rgb(34, 34, 34); font-family: &quot;Helvetica Neue&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, 黑体, Arial, sans-serif; line-height: 22.4px; white-space: normal;\">用户向公众号发送消息时，公众号方收到的消息发送者是一个OpenID，是使用用户微信号加密后的结果，每个用户对每个公众号有一个唯一的OpenID。</p><p style=\"margin-top: 0px; margin-bottom: 0px; padding-bottom: 14px; font-size: 14px; color: rgb(34, 34, 34); font-family: &quot;Helvetica Neue&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, 黑体, Arial, sans-serif; line-height: 22.4px; white-space: normal;\">此外，由于开发者经常有需在多个平台（移动应用、网站、公众帐号）之间共通用户帐号，统一帐号体系的需求，微信开放平台（<a href=\"http://open.weixin.qq.com/\" target=\"_parent\" style=\"outline: 0px; color: rgb(69, 154, 233); text-decoration: none;\">open.weixin.qq.com</a>）提供了UnionID机制。开发者可通过OpenID来获取用户基本信息，而如果开发者拥有多个应用（移动应用、网站应用和公众帐号，公众帐号只有在被绑定到微信开放平台帐号下后，才会获取UnionID），可通过获取用户基本信息中的UnionID来区分用户的唯一性，因为只要是同一个微信开放平台帐号下的移动应用、网站应用和公众帐号，用户的UnionID是唯一的。换句话说，同一用户，对同一个微信开放平台帐号下的不同应用，UnionID是相同的。详情请在微信开放平台的资源中心-移动应用开发-微信登录-授权关系接口调用指引-获取用户个人信息（UnionID机制）中查看。</p><p style=\"margin-top: 0px; margin-bottom: 0px; padding-bottom: 14px; font-size: 14px; color: rgb(34, 34, 34); font-family: &quot;Helvetica Neue&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, 黑体, Arial, sans-serif; line-height: 22.4px; white-space: normal;\">另请注意，微信公众号接口必须以&nbsp;<a href=\"http://或https://开头，分别支持80端口和443端口。\" style=\"font-family: sans-serif; font-size: 16px; text-decoration: none;\">http://或https://开头，分别支持80端口和443端口。</a></p><p><br/></p><p style=\"text-align: right;\">来自&nbsp;<a href=\"https://mp.weixin.qq.com/wiki\" target=\"_blank\" style=\"font-family: &quot;Helvetica Neue&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, 黑体, Arial, sans-serif; font-size: 14px; line-height: 22.4px; white-space: normal;\">微信公众平台开发者文档</a>&nbsp;&nbsp;<span style=\"color: rgb(34, 34, 34); font-family: &quot;Helvetica Neue&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, 黑体, Arial, sans-serif; font-size: 14px; line-height: 22.4px;\"></span></p><p><br/></p>', '1', '18', '1470381818', '1470469234', '1', 'html/20160805/20160805152338.html');
INSERT INTO `article` VALUES ('20', '10', '测试', '12313', '<p>12312321</p>', '2', '20', '1470465413', '1470469290', '1', 'html/20160806/20160806143653.html');
INSERT INTO `article` VALUES ('21', '10', '技术', '超时', '<p>2132131</p>', '1', '18', '1470465496', '1470467751', '1', 'html/20160806/20160806143816.html');
INSERT INTO `article` VALUES ('22', '10', '测试', '123', '<p>123</p>', '1', '18', '1470467119', '1470467756', '1', 'html/20160806/20160806150519.html');

-- ----------------------------
-- Table structure for category
-- ----------------------------
DROP TABLE IF EXISTS `category`;
CREATE TABLE `category` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(30) NOT NULL,
  `Grade` int(2) unsigned NOT NULL,
  `cid` int(1) unsigned NOT NULL DEFAULT '0',
  `type` int(1) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`),
  UNIQUE KEY `name` (`name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=21 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of category
-- ----------------------------
INSERT INTO `category` VALUES ('1', '技术博文', '1', '0', '0');
INSERT INTO `category` VALUES ('2', '生活点滴', '1', '0', '0');
INSERT INTO `category` VALUES ('18', 'PHP', '2', '1', '0');
INSERT INTO `category` VALUES ('19', 'Mysql', '2', '1', '0');
INSERT INTO `category` VALUES ('20', '点滴记录', '2', '2', '0');


-- ----------------------------
-- Table structure for user
-- ----------------------------
DROP TABLE IF EXISTS `user`;
CREATE TABLE `user` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `username` varchar(30) NOT NULL,
  `password` varchar(64) NOT NULL,
  `status` int(1) unsigned NOT NULL DEFAULT '1',
  `power` int(1) unsigned NOT NULL DEFAULT '3',
  PRIMARY KEY (`id`),
  UNIQUE KEY `username` (`username`) USING BTREE,
  UNIQUE KEY `password` (`password`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=14 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of user
-- ----------------------------
INSERT INTO `user` VALUES ('10', 'peak', 'PVLxgYUlj0QJkhTPF6dJMemvyLljXKsVokWgglFbkcub7x4PkzjmH3NxE+N19Q8A', '1', '1');
INSERT INTO `user` VALUES ('12', 'wmj', 'KtG9HdkIjq1EoqAWliO1UnESwFBdIzkQtWDfhxo9UBqb7x4PkzjmH3NxE+N19Q8A', '1', '2');
INSERT INTO `user` VALUES ('13', '123\' OR 1;--', 'sSJ9pmV1ARNYZufVflL6iFeMgNNc1K7JC/rj0ftdjVSb7x4PkzjmH3NxE+N19Q8A', '1', '3');
